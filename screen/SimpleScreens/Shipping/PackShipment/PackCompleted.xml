<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.1.xsd"
        default-menu-include="false" standalone="true">

    <parameter name="shipmentId" required="true"/>

    <transition name="completeShipmentPack">
        <service-call name="mantle.shipment.ShipmentServices.complete#ShipmentPack"/>
        <actions><if condition="localQzPrint == 'true' &amp;&amp; !ec.getMessage().hasError()">
            <script>ec.web.sessionAttributes.put('qzPackShipment' + shipmentId, true)</script></if></actions>
        <default-response url=".."/>
    </transition>

    <actions>
        <entity-find entity-name="mantle.shipment.ShipmentRouteSegment" list="shipmentRouteSegmentList">
            <econdition field-name="shipmentId"/>
            <order-by field-name="shipmentRouteSegmentSeqId"/>
        </entity-find>
        <set field="firstRouteSegment" from="shipmentRouteSegmentList ? shipmentRouteSegmentList.first() : null"/>

        <set field="shippingGatewayConfigId" from="firstRouteSegment.shippingGatewayConfigId ?: ec.user.getPreference('DefaultShipmentGatewayConfigId')"/>
        <if condition="shippingGatewayConfigId"><entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayConfig" value-field="shippingGatewayConfig"/></if>

        <!-- Get settings from ProductStore(s) through order(s) -->
        <entity-find entity-name="mantle.product.store.ProductStoreSettingLookup" list="settingsLookupList" distinct="true">
            <date-filter/><econdition field-name="shipmentId"/>
            <econdition field-name="settingTypeEnumId" operator="in" value="PsstGetReturnLabels,PsstShipRestrictCarriers"/>
            <select-field field-name="productStoreId,settingTypeEnumId,settingValue"/>
        </entity-find>
        <set field="retLabelSettings" from="settingsLookupList.findAll({it.settingTypeEnumId == 'PsstGetReturnLabels'})*.settingValue"/>
        <set field="defaultGetReturnLabels" from="retLabelSettings.contains('true') ? 'true' : ''"/>

        <set field="restrictCarrierProductStoreId" from="null"/>
        <iterate list="settingsLookupList.findAll({it.settingTypeEnumId == 'PsstShipRestrictCarriers'})" entry="restrictCarrierSetting">
            <if condition="restrictCarrierSetting.settingValue == 'true'">
                <set field="restrictCarrierProductStoreId" from="restrictCarrierSetting.productStoreId"/>
            </if>
        </iterate>

        <!-- get shipping options with rates, select option with matching shipmentMethodEnumId and lowest shippingTotal -->
        <set field="carrierPartyIdList" from="null"/>
        <if condition="restrictCarrierProductStoreId">
            <entity-find entity-name="mantle.product.store.ProductStoreShippingGateway" list="storeShippingGatewayList" cache="true">
                <econdition field-name="productStoreId" from="restrictCarrierProductStoreId"/></entity-find>
            <set field="carrierPartyIdList" from="storeShippingGatewayList*.carrierPartyId"/>
        </if>
        <service-call name="mantle.shipment.ShipmentServices.get#ShipmentShippingOptions" out-map="context"
                in-map="[shipmentId:shipmentId, carrierPartyIdList:carrierPartyIdList, getRates:true]"/>
        <set field="curShipmentMethodEnumId" from="firstRouteSegment.shipmentMethodEnumId"/>
        <set field="lowestCarrierAndShipmentMethod" from="firstRouteSegment.carrierPartyId ? firstRouteSegment.carrierPartyId + ':' + firstRouteSegment.shipmentMethodEnumId : ''"/>
        <set field="lowestRate" from="10000.0"/>
        <iterate list="shippingOptions" entry="shipOption">
            <set field="shippingTotalBd" from="shipOption.shippingTotal ? new BigDecimal(shipOption.shippingTotal) : null"/>
            <if condition="shippingTotalBd &amp;&amp; shippingTotalBd &lt; lowestRate &amp;&amp; (!curShipmentMethodEnumId || curShipmentMethodEnumId == shipOption.shipmentMethodEnumId)">
                <set field="lowestCarrierAndShipmentMethod" from="shipOption.carrierPartyId + ':' + shipOption.shipmentMethodEnumId"/>
                <set field="lowestRate" from="shippingTotalBd"/>
            </if>
        </iterate>

        <entity-find entity-name="moqui.basic.print.NetworkPrinter" list="networkPrinterList">
            <order-by field-name="description,printerName"/></entity-find>
        <set field="defaultNetworkPrinterId" from="ec.user.getPreference('Shipment.networkPrinterId.default')"/>

        <!-- get order carrier and method info -->
        <entity-find entity-name="mantle.shipment.ShipmentItemSourceOrderItem" list="sisOrderItemList" distinct="true">
            <econdition field-name="shipmentId"/>
            <econdition field-name="orderId" operator="is-not-null"/>
            <econdition field-name="orderPartSeqId" operator="is-not-null"/>
            <select-field field-name="orderId,orderPartSeqId"/>
        </entity-find>
        <if condition="sisOrderItemList">
            <entity-find-one entity-name="mantle.order.OrderPart" value-field="firstOrderPart">
                <field-map field-name="orderId" from="sisOrderItemList[0].orderId"/>
                <field-map field-name="orderPartSeqId" from="sisOrderItemList[0].orderPartSeqId"/>
            </entity-find-one>
            <if condition="firstOrderPart != null">
                <if condition="firstOrderPart.carrierPartyId &amp;&amp; firstOrderPart.carrierPartyId != '_NA_'">
                    <entity-find-one entity-name="mantle.party.PartyDetail" value-field="orderCarrierDetail" cache="true">
                        <field-map field-name="partyId" from="firstOrderPart.carrierPartyId"/></entity-find-one>
                </if>
                <entity-find-one entity-name="moqui.basic.Enumeration" value-field="orderShipmentMethodEnum">
                    <field-map field-name="enumId" from="firstOrderPart.shipmentMethodEnumId"/></entity-find-one>
                <entity-find-one entity-name="mantle.shipment.carrier.CarrierShipmentMethod" value-field="orderCarrierShipmentMethod">
                    <field-map field-name="carrierPartyId" from="firstOrderPart.carrierPartyId"/>
                    <field-map field-name="shipmentMethodEnumId" from="firstOrderPart.shipmentMethodEnumId"/>
                </entity-find-one>
            </if>
        </if>
    </actions>
    <widgets>
        <!--
        - dynamic dialog, load with carrier/method rates looked up and cheapest for method selected
        - with confirmation mention auto get labels and print, extra text if not fully packed
        - auto select carrier by method selected and rate lookup
        - make sure shipment item quantity and SIS quantity reduced on partial ship
        -->
        <!-- <section-iterate name="headerMessageInfos" list="ec.message.messageInfos" entry="messageInfo"><widgets>
            <label text="${messageInfo.message}" type="p"/></widgets></section-iterate> -->
        <section-iterate name="headerErrors" list="ec.message.errors" entry="errorMessage"><widgets>
            <label text="${errorMessage}" type="p"/></widgets></section-iterate>
        <section-iterate name="headerValidationErrors" list="ec.message.validationErrors" entry="validationError"><widgets>
            <label text="${validationError.message} (for field ${validationError.fieldPretty})" type="p"/>
        </widgets></section-iterate>

        <container type="dl" style="dl-horizontal">
            <label text="Store" type="dt" condition="productStore != null"/>
            <label text="${productStore.productStoreId}: ${productStore.storeName}" type="dd" condition="productStore != null"/>
            <label text="Shipping Gateway" type="dt"/>
            <label text="${shippingGatewayConfig?.description ?: 'No Shipping Gateway'}" type="dd"/>
            <label text="Order Ship By" type="dt"/>
            <label text="${orderCarrierShipmentMethod?.description ? orderCarrierShipmentMethod.description : (orderCarrierDetail ? orderCarrierDetail.pseudoId : 'N/A') + ' ' + (orderShipmentMethodEnum ? orderShipmentMethodEnum.description : 'None')}" type="dd"/>
        </container>
        <form-single name="PackCompletedForm" transition="completeShipmentPack">
            <field name="shipmentId"><default-field><hidden/></default-field></field>

            <field name="carrierAndShipmentMethod"><default-field title="Ship By">
                <drop-down allow-empty="true" no-current-selected-key="${lowestCarrierAndShipmentMethod}">
                    <list-options list="shippingOptions" key="${carrierPartyId}:${shipmentMethodEnumId}"
                            text="${description ? description : (carrierPartyId != '_NA_' ? (carrierName + ' - ') : '') + shipmentMethodDescription}${shippingTotal != null ? ' ' + ec.l10n.format(shippingTotal, '#,##0.00') : ''}"/>
                </drop-down>
            </default-field></field>
            <field name="getLabels" from="shippingGatewayConfig != null ? 'true' : ''"><default-field title="Get Labels">
                <check><option key="true" text=" "/></check></default-field></field>
            <field name="getReturnLabels" from="defaultGetReturnLabels"><default-field title="Get Return Labels">
                <check><option key="true" text=" "/></check></default-field></field>

            <field name="networkPrinterId" from="defaultNetworkPrinterId"><conditional-field title="Printer" condition="networkPrinterList">
                <drop-down><list-options list="networkPrinterList" key="${networkPrinterId}" text="${description ?: printerName} (${serverHost})"/></drop-down>
            </conditional-field></field>
            <field name="makeDefaultPrinter"><conditional-field title="Make Default" condition="networkPrinterList">
                <check><option key="true" text=" "/></check></conditional-field></field>

            <field name="localQzPrint"><default-field title="Local Print"><check all-checked="true">
                <option key="true" text="(only if QZ Print setup)"/></check></default-field></field>

            <field name="submitButtom"><default-field title="Complete Pack"><submit/></default-field></field>
        </form-single>
    </widgets>
</screen>
